(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{488:function(t,e,a){"use strict";a.r(e);var n=a(14),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"自定义文本选择工具浮动工具框"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义文本选择工具浮动工具框"}},[t._v("#")]),t._v(" 自定义文本选择工具浮动工具框")]),t._v(" "),e("p",[t._v("自定义悬浮工具提示包括两个步骤。首先，您应该创建一个自定义控制器来定义目标工具的逻辑，然后在fragments中添加或者编辑该工具。本节内容将介绍：")]),t._v(" "),e("ul",[e("li",[t._v("创建自定义控制器和通过fragments修改组件示例")]),t._v(" "),e("li",[t._v("悬浮工具提示中使用的逻辑处理方法")]),t._v(" "),e("li",[t._v("悬浮工具提示的组件名称")])]),t._v(" "),e("h2",{attrs:{id:"创建自定义控制器和通过fragment-配置修改组件示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义控制器和通过fragment-配置修改组件示例"}},[t._v("#")]),t._v(" 创建自定义控制器和通过fragment 配置修改组件示例")]),t._v(" "),e("p",[t._v("示例代码在 "),e("code",[t._v("/examples/UIExtension/custom-text-selection-tool")]),t._v(" 目录下。")]),t._v(" "),e("h2",{attrs:{id:"悬浮工具提示中使用的逻辑处理方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#悬浮工具提示中使用的逻辑处理方法"}},[t._v("#")]),t._v(" 悬浮工具提示中使用的逻辑处理方法")]),t._v(" "),e("p",[t._v("在某些情况下，当您修改工具提示时，您很可能希望创建自己的控制器来处理工具。以下代码是创建控制器的常用方法。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tooltipLayer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("component"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClosestComponentByType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tooltip-layer'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textSelectionTool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tooltipLayer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentSelectionTool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntextSelectionTool"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSelectionInfo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("selectionInfo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntextSelectionTool"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageRender "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//The current rendering page object  ")]),t._v("\n")])])]),e("p",[t._v("getClosestComponentByType() 函数用来获取匹配的工具提示层。\ngetCurrentSelectionTool() 函数用来获取文本选择工具对象。\ngetSelectionInfo() 函数用来获取选定的文本信息和当前渲染页面对象。获取的文本信息包括：")]),t._v(" "),e("ul",[e("li",[t._v("page  // PDF 页面对象")]),t._v(" "),e("li",[t._v("text  // 文本内容")]),t._v(" "),e("li",[t._v("rectArray // 文本块 (单位: point)")])]),t._v(" "),e("h2",{attrs:{id:"悬浮工具提示的组件名称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#悬浮工具提示的组件名称"}},[t._v("#")]),t._v(" 悬浮工具提示的组件名称")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("组件名称")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("fv--text-selection-tooltip")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("悬浮工具提示层")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("fv--text-selection-tooltip-copy")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("复制工具")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("fv--text-selection-tooltip-create-highlight")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("高亮工具")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("fv--text-selection-tooltip-create-strikeout")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("删除线工具")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("fv--text-selection-tooltip-create-underline")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("下划线工具")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);